/* This file was generated by SableCC (http://www.sablecc.org/). */

package fr.umlv.ir2.compil.cmdlineparser.node;

import fr.umlv.ir2.compil.cmdlineparser.analysis.*;

public final class X1POptionsStart extends XPOptionsStart
{
    private XPOptionsStart _xPOptionsStart_;
    private POptionsStart _pOptionsStart_;

    public X1POptionsStart()
    {
    }

    public X1POptionsStart(
        XPOptionsStart _xPOptionsStart_,
        POptionsStart _pOptionsStart_)
    {
        setXPOptionsStart(_xPOptionsStart_);
        setPOptionsStart(_pOptionsStart_);
    }

    public Object clone()
    {
        throw new RuntimeException("Unsupported Operation");
    }

    public void apply(Switch sw)
    {
        throw new RuntimeException("Switch not supported.");
    }

    public XPOptionsStart getXPOptionsStart()
    {
        return _xPOptionsStart_;
    }

    public void setXPOptionsStart(XPOptionsStart node)
    {
        if(_xPOptionsStart_ != null)
        {
            _xPOptionsStart_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _xPOptionsStart_ = node;
    }

    public POptionsStart getPOptionsStart()
    {
        return _pOptionsStart_;
    }

    public void setPOptionsStart(POptionsStart node)
    {
        if(_pOptionsStart_ != null)
        {
            _pOptionsStart_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _pOptionsStart_ = node;
    }

    void removeChild(Node child)
    {
        if(_xPOptionsStart_ == child)
        {
            _xPOptionsStart_ = null;
        }

        if(_pOptionsStart_ == child)
        {
            _pOptionsStart_ = null;
        }
    }

    void replaceChild(Node oldChild, Node newChild)
    {
    }

    public String toString()
    {
        return "" +
            toString(_xPOptionsStart_) +
            toString(_pOptionsStart_);
    }
}
