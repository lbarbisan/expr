/* This file was generated by SableCC (http://www.sablecc.org/). */

package fr.umlv.ir2.compil.cmdlineparser.node;

import java.util.*;
import fr.umlv.ir2.compil.cmdlineparser.analysis.*;

public final class AHtmlFileOptionsEnd extends POptionsEnd
{
    private TOptHtmlFile _optHtmlFile_;
    private TQuote _right_;
    private PId _id_;
    private PNextOption _nextOption_;

    public AHtmlFileOptionsEnd()
    {
    }

    public AHtmlFileOptionsEnd(
        TOptHtmlFile _optHtmlFile_,
        TQuote _right_,
        PId _id_,
        PNextOption _nextOption_)
    {
        setOptHtmlFile(_optHtmlFile_);

        setRight(_right_);

        setId(_id_);

        setNextOption(_nextOption_);

    }
    public Object clone()
    {
        return new AHtmlFileOptionsEnd(
            (TOptHtmlFile) cloneNode(_optHtmlFile_),
            (TQuote) cloneNode(_right_),
            (PId) cloneNode(_id_),
            (PNextOption) cloneNode(_nextOption_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAHtmlFileOptionsEnd(this);
    }

    public TOptHtmlFile getOptHtmlFile()
    {
        return _optHtmlFile_;
    }

    public void setOptHtmlFile(TOptHtmlFile node)
    {
        if(_optHtmlFile_ != null)
        {
            _optHtmlFile_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _optHtmlFile_ = node;
    }

    public TQuote getRight()
    {
        return _right_;
    }

    public void setRight(TQuote node)
    {
        if(_right_ != null)
        {
            _right_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _right_ = node;
    }

    public PId getId()
    {
        return _id_;
    }

    public void setId(PId node)
    {
        if(_id_ != null)
        {
            _id_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _id_ = node;
    }

    public PNextOption getNextOption()
    {
        return _nextOption_;
    }

    public void setNextOption(PNextOption node)
    {
        if(_nextOption_ != null)
        {
            _nextOption_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _nextOption_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_optHtmlFile_)
            + toString(_right_)
            + toString(_id_)
            + toString(_nextOption_);
    }

    void removeChild(Node child)
    {
        if(_optHtmlFile_ == child)
        {
            _optHtmlFile_ = null;
            return;
        }

        if(_right_ == child)
        {
            _right_ = null;
            return;
        }

        if(_id_ == child)
        {
            _id_ = null;
            return;
        }

        if(_nextOption_ == child)
        {
            _nextOption_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_optHtmlFile_ == oldChild)
        {
            setOptHtmlFile((TOptHtmlFile) newChild);
            return;
        }

        if(_right_ == oldChild)
        {
            setRight((TQuote) newChild);
            return;
        }

        if(_id_ == oldChild)
        {
            setId((PId) newChild);
            return;
        }

        if(_nextOption_ == oldChild)
        {
            setNextOption((PNextOption) newChild);
            return;
        }

    }
}
