/* This file was generated by SableCC (http://www.sablecc.org/). */

package fr.umlv.ir2.compil.languageparser.node;

import fr.umlv.ir2.compil.languageparser.analysis.*;

public final class X1PParams extends XPParams
{
    private XPParams _xPParams_;
    private PParams _pParams_;

    public X1PParams()
    {
    }

    public X1PParams(
        XPParams _xPParams_,
        PParams _pParams_)
    {
        setXPParams(_xPParams_);
        setPParams(_pParams_);
    }

    public Object clone()
    {
        throw new RuntimeException("Unsupported Operation");
    }

    public void apply(Switch sw)
    {
        throw new RuntimeException("Switch not supported.");
    }

    public XPParams getXPParams()
    {
        return _xPParams_;
    }

    public void setXPParams(XPParams node)
    {
        if(_xPParams_ != null)
        {
            _xPParams_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _xPParams_ = node;
    }

    public PParams getPParams()
    {
        return _pParams_;
    }

    public void setPParams(PParams node)
    {
        if(_pParams_ != null)
        {
            _pParams_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _pParams_ = node;
    }

    void removeChild(Node child)
    {
        if(_xPParams_ == child)
        {
            _xPParams_ = null;
        }

        if(_pParams_ == child)
        {
            _pParams_ = null;
        }
    }

    void replaceChild(Node oldChild, Node newChild)
    {
    }

    public String toString()
    {
        return "" +
            toString(_xPParams_) +
            toString(_pParams_);
    }
}
