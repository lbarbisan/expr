/* This file was generated by SableCC (http://www.sablecc.org/). */

package fr.umlv.ir2.compil.languageparser.node;

import java.util.*;
import fr.umlv.ir2.compil.languageparser.analysis.*;

public final class AModExprProduct extends PExprProduct
{
    private PExprProduct _exprProduct_;
    private TMod _mod_;
    private PExprUnary _exprUnary_;

    public AModExprProduct()
    {
    }

    public AModExprProduct(
        PExprProduct _exprProduct_,
        TMod _mod_,
        PExprUnary _exprUnary_)
    {
        setExprProduct(_exprProduct_);

        setMod(_mod_);

        setExprUnary(_exprUnary_);

    }
    public Object clone()
    {
        return new AModExprProduct(
            (PExprProduct) cloneNode(_exprProduct_),
            (TMod) cloneNode(_mod_),
            (PExprUnary) cloneNode(_exprUnary_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAModExprProduct(this);
    }

    public PExprProduct getExprProduct()
    {
        return _exprProduct_;
    }

    public void setExprProduct(PExprProduct node)
    {
        if(_exprProduct_ != null)
        {
            _exprProduct_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _exprProduct_ = node;
    }

    public TMod getMod()
    {
        return _mod_;
    }

    public void setMod(TMod node)
    {
        if(_mod_ != null)
        {
            _mod_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _mod_ = node;
    }

    public PExprUnary getExprUnary()
    {
        return _exprUnary_;
    }

    public void setExprUnary(PExprUnary node)
    {
        if(_exprUnary_ != null)
        {
            _exprUnary_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _exprUnary_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_exprProduct_)
            + toString(_mod_)
            + toString(_exprUnary_);
    }

    void removeChild(Node child)
    {
        if(_exprProduct_ == child)
        {
            _exprProduct_ = null;
            return;
        }

        if(_mod_ == child)
        {
            _mod_ = null;
            return;
        }

        if(_exprUnary_ == child)
        {
            _exprUnary_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_exprProduct_ == oldChild)
        {
            setExprProduct((PExprProduct) newChild);
            return;
        }

        if(_mod_ == oldChild)
        {
            setMod((TMod) newChild);
            return;
        }

        if(_exprUnary_ == oldChild)
        {
            setExprUnary((PExprUnary) newChild);
            return;
        }

    }
}
