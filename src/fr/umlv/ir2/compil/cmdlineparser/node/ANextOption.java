/* This file was generated by SableCC (http://www.sablecc.org/). */

package fr.umlv.ir2.compil.cmdlineparser.node;

import java.util.*;
import fr.umlv.ir2.compil.cmdlineparser.analysis.*;

public final class ANextOption extends PNextOption
{
    private TQuote _left_;
    private POptionsEnd _optionsEnd_;

    public ANextOption()
    {
    }

    public ANextOption(
        TQuote _left_,
        POptionsEnd _optionsEnd_)
    {
        setLeft(_left_);

        setOptionsEnd(_optionsEnd_);

    }
    public Object clone()
    {
        return new ANextOption(
            (TQuote) cloneNode(_left_),
            (POptionsEnd) cloneNode(_optionsEnd_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseANextOption(this);
    }

    public TQuote getLeft()
    {
        return _left_;
    }

    public void setLeft(TQuote node)
    {
        if(_left_ != null)
        {
            _left_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _left_ = node;
    }

    public POptionsEnd getOptionsEnd()
    {
        return _optionsEnd_;
    }

    public void setOptionsEnd(POptionsEnd node)
    {
        if(_optionsEnd_ != null)
        {
            _optionsEnd_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _optionsEnd_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_left_)
            + toString(_optionsEnd_);
    }

    void removeChild(Node child)
    {
        if(_left_ == child)
        {
            _left_ = null;
            return;
        }

        if(_optionsEnd_ == child)
        {
            _optionsEnd_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_left_ == oldChild)
        {
            setLeft((TQuote) newChild);
            return;
        }

        if(_optionsEnd_ == oldChild)
        {
            setOptionsEnd((POptionsEnd) newChild);
            return;
        }

    }
}
