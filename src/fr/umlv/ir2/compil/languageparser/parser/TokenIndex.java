/* This file was generated by SableCC (http://www.sablecc.org/). */

package fr.umlv.ir2.compil.languageparser.parser;

import fr.umlv.ir2.compil.languageparser.node.*;
import fr.umlv.ir2.compil.languageparser.analysis.*;

class TokenIndex extends AnalysisAdapter
{
    int index;

    public void caseTMcVar(TMcVar node)
    {
        index = 0;
    }

    public void caseTMcFunction(TMcFunction node)
    {
        index = 1;
    }

    public void caseTMcPrint(TMcPrint node)
    {
        index = 2;
    }

    public void caseTMcFor(TMcFor node)
    {
        index = 3;
    }

    public void caseTMcTo(TMcTo node)
    {
        index = 4;
    }

    public void caseTMcInt(TMcInt node)
    {
        index = 5;
    }

    public void caseTMcFloat(TMcFloat node)
    {
        index = 6;
    }

    public void caseTMcBool(TMcBool node)
    {
        index = 7;
    }

    public void caseTMcIf(TMcIf node)
    {
        index = 8;
    }

    public void caseTMcThen(TMcThen node)
    {
        index = 9;
    }

    public void caseTMcElse(TMcElse node)
    {
        index = 10;
    }

    public void caseTMcLet(TMcLet node)
    {
        index = 11;
    }

    public void caseTMcIn(TMcIn node)
    {
        index = 12;
    }

    public void caseTMcNot(TMcNot node)
    {
        index = 13;
    }

    public void caseTType(TType node)
    {
        index = 14;
    }

    public void caseTInt(TInt node)
    {
        index = 15;
    }

    public void caseTFloat(TFloat node)
    {
        index = 16;
    }

    public void caseTBool(TBool node)
    {
        index = 17;
    }

    public void caseTId(TId node)
    {
        index = 18;
    }

    public void caseTEqual(TEqual node)
    {
        index = 19;
    }

    public void caseTLPar(TLPar node)
    {
        index = 20;
    }

    public void caseTRPar(TRPar node)
    {
        index = 21;
    }

    public void caseTLBracket(TLBracket node)
    {
        index = 22;
    }

    public void caseTRBracket(TRBracket node)
    {
        index = 23;
    }

    public void caseTPlus(TPlus node)
    {
        index = 24;
    }

    public void caseTMinus(TMinus node)
    {
        index = 25;
    }

    public void caseTSemicolon(TSemicolon node)
    {
        index = 26;
    }

    public void caseTMult(TMult node)
    {
        index = 27;
    }

    public void caseTDiv(TDiv node)
    {
        index = 28;
    }

    public void caseTMod(TMod node)
    {
        index = 29;
    }

    public void caseTComma(TComma node)
    {
        index = 30;
    }

    public void caseTLt(TLt node)
    {
        index = 31;
    }

    public void caseTLteq(TLteq node)
    {
        index = 32;
    }

    public void caseTGt(TGt node)
    {
        index = 33;
    }

    public void caseTGteq(TGteq node)
    {
        index = 34;
    }

    public void caseTAnd(TAnd node)
    {
        index = 35;
    }

    public void caseTOr(TOr node)
    {
        index = 36;
    }

    public void caseTXor(TXor node)
    {
        index = 37;
    }

    public void caseTTexte(TTexte node)
    {
        index = 38;
    }

    public void caseEOF(EOF node)
    {
        index = 39;
    }
}
