/* This file was generated by SableCC (http://www.sablecc.org/). */

package fr.umlv.ir2.compil.languageparser.node;

import java.util.*;
import fr.umlv.ir2.compil.languageparser.analysis.*;

public final class AConditionExpression extends PExpression
{
    private PExprIfLet _exprIfLet_;

    public AConditionExpression()
    {
    }

    public AConditionExpression(
        PExprIfLet _exprIfLet_)
    {
        setExprIfLet(_exprIfLet_);

    }
    public Object clone()
    {
        return new AConditionExpression(
            (PExprIfLet) cloneNode(_exprIfLet_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAConditionExpression(this);
    }

    public PExprIfLet getExprIfLet()
    {
        return _exprIfLet_;
    }

    public void setExprIfLet(PExprIfLet node)
    {
        if(_exprIfLet_ != null)
        {
            _exprIfLet_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _exprIfLet_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_exprIfLet_);
    }

    void removeChild(Node child)
    {
        if(_exprIfLet_ == child)
        {
            _exprIfLet_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_exprIfLet_ == oldChild)
        {
            setExprIfLet((PExprIfLet) newChild);
            return;
        }

    }
}
