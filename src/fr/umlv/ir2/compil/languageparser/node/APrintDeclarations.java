/* This file was generated by SableCC (http://www.sablecc.org/). */

package fr.umlv.ir2.compil.languageparser.node;

import java.util.*;
import fr.umlv.ir2.compil.languageparser.analysis.*;

public final class APrintDeclarations extends PDeclarations
{
    private TMcPrint _mcPrint_;
    private PExpression _expression_;
    private TSemicolon _semicolon_;

    public APrintDeclarations()
    {
    }

    public APrintDeclarations(
        TMcPrint _mcPrint_,
        PExpression _expression_,
        TSemicolon _semicolon_)
    {
        setMcPrint(_mcPrint_);

        setExpression(_expression_);

        setSemicolon(_semicolon_);

    }
    public Object clone()
    {
        return new APrintDeclarations(
            (TMcPrint) cloneNode(_mcPrint_),
            (PExpression) cloneNode(_expression_),
            (TSemicolon) cloneNode(_semicolon_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAPrintDeclarations(this);
    }

    public TMcPrint getMcPrint()
    {
        return _mcPrint_;
    }

    public void setMcPrint(TMcPrint node)
    {
        if(_mcPrint_ != null)
        {
            _mcPrint_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _mcPrint_ = node;
    }

    public PExpression getExpression()
    {
        return _expression_;
    }

    public void setExpression(PExpression node)
    {
        if(_expression_ != null)
        {
            _expression_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _expression_ = node;
    }

    public TSemicolon getSemicolon()
    {
        return _semicolon_;
    }

    public void setSemicolon(TSemicolon node)
    {
        if(_semicolon_ != null)
        {
            _semicolon_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _semicolon_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_mcPrint_)
            + toString(_expression_)
            + toString(_semicolon_);
    }

    void removeChild(Node child)
    {
        if(_mcPrint_ == child)
        {
            _mcPrint_ = null;
            return;
        }

        if(_expression_ == child)
        {
            _expression_ = null;
            return;
        }

        if(_semicolon_ == child)
        {
            _semicolon_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_mcPrint_ == oldChild)
        {
            setMcPrint((TMcPrint) newChild);
            return;
        }

        if(_expression_ == oldChild)
        {
            setExpression((PExpression) newChild);
            return;
        }

        if(_semicolon_ == oldChild)
        {
            setSemicolon((TSemicolon) newChild);
            return;
        }

    }
}
